package com.hudson.codes;//ÁªôÂÆö‰∏Ä‰∏™Êï¥Êï∞Êï∞ÁªÑ nums ÔºåÊâæÂà∞‰∏Ä‰∏™ÂÖ∑ÊúâÊúÄÂ§ßÂíåÁöÑËøûÁª≠Â≠êÊï∞ÁªÑÔºàÂ≠êÊï∞ÁªÑÊúÄÂ∞ëÂåÖÂê´‰∏Ä‰∏™ÂÖÉÁ¥†ÔºâÔºåËøîÂõûÂÖ∂ÊúÄÂ§ßÂíå„ÄÇ
//
// Á§∫‰æã: 
//
// ËæìÂÖ•: [-2,1,-3,4,-1,2,1,-5,4]
//ËæìÂá∫: 6
//Ëß£Èáä:¬†ËøûÁª≠Â≠êÊï∞ÁªÑ¬†[4,-1,2,1] ÁöÑÂíåÊúÄÂ§ßÔºå‰∏∫¬†6„ÄÇ
// 
//
// ËøõÈò∂: 
//
// Â¶ÇÊûú‰Ω†Â∑≤ÁªèÂÆûÁé∞Â§çÊùÇÂ∫¶‰∏∫ O(n) ÁöÑËß£Ê≥ïÔºåÂ∞ùËØï‰ΩøÁî®Êõ¥‰∏∫Á≤æÂ¶ôÁöÑÂàÜÊ≤ªÊ≥ïÊ±ÇËß£„ÄÇ 
// Related Topics Êï∞ÁªÑ ÂàÜÊ≤ªÁÆóÊ≥ï Âä®ÊÄÅËßÑÂàí 
// üëç 2690 üëé 0


//leetcode submit region begin(Prohibit modification and deletion)
class Solution53 {

    // ÈÄöËøáÔºåÊó∂Èó¥94.13%ÔºåÁ©∫Èó¥66.44%
    // ÊúÄÂ§ßÂíåÔºåÂæàÊòéÊòæ‰ΩøÁî®Âä®ÊÄÅËßÑÂàíÊúÄÁÆÄÂçï
    // Áî±‰∫éÂåÖÂê´Ê≠£Ë¥üÊï∞ÔºåÂõ†Ê≠§ÈúÄË¶ÅÂàÜÁ±ªËÆ®ËÆ∫
    // dp(i)Ë°®Á§∫‰ª•iÁªìÂ∞æÁöÑÊúÄÂ§ßÂ≠êÊï∞ÁªÑÁöÑÂíåÔºå Ê≥®ÊÑèÂøÖÈ°ª‰ª•iÁªìÂ∞æ
    // ÈÇ£‰πàdp(i) = dp(i - 1) + nums[i] ‰∏înums[i] >= 0
    // dp(i) = dp(i - 1) ‰∏î nums[i] < 0  Ëøô‰∏™ËΩ¨ÁßªÊñπÁ®ãÊúâÈóÆÈ¢òÂêßÔºàÂ§ç‰π†ÂèëÁé∞Ôºâ
    // Â∫îËØ•ÊòØËøôÊ†∑ÁöÑÂêßÔºü dp(i) = max(dp(i - 1) + nums[i], nums[i])
    public static int maxSubArray(int[] nums) {
        if(nums == null || nums.length == 0) return 0;
        int[] dp = new int[nums.length];
        dp[0] = nums[0];
        int maxValue = dp[0];
        for (int i = 1; i < nums.length; i++) {
            // ÊâæÂà∞‰∏ã‰∏Ä‰∏™‰ΩçÁΩÆ‰∏äÔºåÂè™Ë¶Å‰πãÂâçÁöÑÂíå+ÂΩìÂâçÁöÑÊï∞ÁöÑÂíåÊØîÂΩìÂâçÊï∞Ë¶ÅÂ§ßÔºåÈÇ£‰πà‰ΩøÁî®‰πãÂâçÁöÑÂíåÁªßÁª≠Á¥ØÂä†ÊØî‰ΩøÁî®ÂΩìÂâçÊï∞ÈáçÊñ∞ÂºÄÂßãÊõ¥Â•Ω
            if((dp[i - 1] + nums[i]) > nums[i]){
                dp[i] = dp[i - 1] + nums[i];
            }else{
                //„ÄêÈîôËØØ1„ÄëÂ¶ÇÊûúÂ∞è‰∫é0Ôºå‰∏çÂ∫îËØ•Âä†‰πãÂâçÁöÑÊï∞ÔºåÂ∫îËØ•ÈáçÊñ∞ÂºÄÂßãÔºåÂàùÂßãÂÄºÂ∞±Êó∂ÂΩìÂâçÊï∞ÔºåËÄå‰∏çÊòØ0
                dp[i] = nums[i];
            }
            maxValue = Math.max(maxValue, dp[i]);
        }
        return maxValue;
    }

    // ÈÄöËøáÔºöÊó∂Èó¥94.13%ÁöÑÁî®Êà∑ÔºåÁ©∫Èó¥83.59%
    // Êõ¥ÁÆÄ‰æøÁöÑÊñπÊ≥ïÔºåÂ¶ÇÊûúÊàë‰ª¨ÁöÑdp[i - 1] > 0ÔºåÈÇ£‰πàÊó†ËÆ∫‰ΩïÁßçÊÉÖÂÜµ‰∏ãÔºåÊàë‰ª¨Âä†‰∏änums[i]ÁöÑÂíå‰∏ÄÂÆöÊØînums[i]Â§ßÔºå
    // Âõ†Ê≠§Êàë‰ª¨Âè™ÈúÄË¶ÅÂà§Êñ≠‰∏ä‰∏Ä‰∏™ÁöÑdpÂÄºÊòØÂê¶>0Âç≥ÂèØ
    public static int maxSubArray2(int[] nums) {
        if(nums == null || nums.length == 0) return 0;
        int[] dp = new int[nums.length];
        dp[0] = nums[0];
        int maxValue = dp[0];
        for (int i = 1; i < nums.length; i++) {
            if(dp[i - 1] > 0){
                dp[i] = dp[i - 1] + nums[i];
            }else{
                dp[i] = nums[i];
            }
            maxValue = Math.max(maxValue, dp[i]);
        }
        return maxValue;
    }
}
//leetcode submit region end(Prohibit modification and deletion)
